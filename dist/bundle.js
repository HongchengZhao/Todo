!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e){this.selected={year:0,month:0,day:0},this.el=e,this.calendarIndicator=document.createElement("div"),this.calendarIndicator.classList.add("calendar-indicator"),this.renderIndicator(),this.calendarHead=document.createElement("div"),this.calendarHead.classList.add("calendar-head"),this.renderHead(),this.calendarBody=document.createElement("div"),this.calendarBody.classList.add("calendar-body");var t=new Date;this.month=t.getMonth()+1,this.year=t.getFullYear(),this.renderBody(this.month,this.year),this.selected.day=t.getDate(),this.selected.month=this.month,this.selected.year=this.year,this.el.append(this.calendarIndicator,this.calendarHead,this.calendarBody)}return e.prototype.renderIndicator=function(){var e=this,t=document.createElement("div");t.innerText="❮",t.classList.add("prev-month");var n=document.createElement("h3");n.classList.add("current-month");var i=document.createElement("div");i.classList.add("next-month"),i.innerText="❯",this.calendarIndicator.append(t,n,i),this.calendarIndicator.addEventListener("click",function(t){var n=t.target;n.classList.contains("prev-month")?(0==--e.month&&(e.month=12,e.year-=1),e.renderBody(e.month,e.year)):n.classList.contains("next-month")&&(13==++e.month&&(e.month=1,e.year+=1),e.renderBody(e.month,e.year))})},e.prototype.renderHead=function(){var e,t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"].map(function(e){var t=document.createElement("div");return t.classList.add("weekday"),t.innerText=e,t});(e=this.calendarHead).append.apply(e,t)},e.prototype.renderBody=function(t,n){for(var i,r=this;this.calendarBody.firstChild;)this.calendarBody.removeChild(this.calendarBody.firstChild);this.calendarIndicator.getElementsByClassName("current-month")[0].innerHTML=e.months[t-1]+" "+n;for(var a=this.daysInMonth(t,n),s=[],o=0;o<a;++o){(u=document.createElement("div")).classList.add("cell-day","this-month"),u.innerText=""+(o+1),s.push(u)}var d=new Date;this.year===d.getFullYear()&&this.month===d.getMonth()+1&&s[d.getDate()-1].classList.add("selected");for(var c=new Date(n,t,1).getUTCDay()||7,l=1;l<c;++l){var u;(u=document.createElement("div")).classList.add("cell-day"),s.unshift(u)}(i=this.calendarBody).append.apply(i,s),this.calendarBody.addEventListener("click",function(e){var t=e.target;if(t.classList.contains("this-month")){var n=r.calendarBody.getElementsByClassName("selected")[0];n&&n.classList.remove("selected"),t.classList.add("selected"),r.selected.day=parseInt(t.innerText),r.selected.month=r.month,r.selected.year=r.year}})},e.prototype.daysInMonth=function(e,t){return new Date(t,e,0).getDate()},e.months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e){this.timePicker=e,this.hourPicker=document.createElement("select"),this.hourPicker.classList.add("hour-picker"),this.renderHourPicker(),this.minutePicker=document.createElement("select"),this.minutePicker.classList.add("minute-picker"),this.renderMinutePicker();var t=document.createTextNode(":");this.timePicker.append(this.hourPicker,t,this.minutePicker)}return e.prototype.renderHourPicker=function(){for(var e,t=[],n=0;n<24;++n){var i=document.createElement("option");i.value=""+n,i.innerText=""+n,t.push(i)}(e=this.hourPicker).append.apply(e,t)},e.prototype.renderMinutePicker=function(){for(var e,t=[],n=0;n<60;++n){var i=document.createElement("option");i.value=""+n,i.innerText=""+n,t.push(i)}(e=this.minutePicker).append.apply(e,t)},e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(5),r=n(3),a=n(0),s=n(4),o=n(8),d=n(7),c=function(){function e(){this.curTodoId="",this.filter="ALL";var e=localStorage.getItem("todolist");this.list=e?JSON.parse(e):[],this.editor=new r.default(this.list),this.todoList=new s.default(this.list,this.editor,document.getElementById("todo-list"),document.getElementById("new-todo"));var t=new a.default(document.getElementById("calendar"));this.calendarTodoList=new d.default(this.list,this.editor,t,document.getElementById("todolist-by-day")),this.searchResult=new o.default(this.list,this.editor,document.getElementById("result-list"),document.getElementById("search-todo")),this.init()}return e.prototype.init=function(){var e=this;this.configRoutes(),document.getElementById("complete-all").addEventListener("click",function(){e.list.forEach(function(e){return e.status=i.Status.COMPLETED}),e.todoList.render(e.filter)}),document.getElementById("uncomplete-all").addEventListener("click",function(){e.list.forEach(function(e){return e.status=i.Status.ACTIVE}),e.todoList.render(e.filter)}),document.getElementById("remove-all-completed").addEventListener("click",function(){var t,n=e.list.reduce(function(e,t){return t.status===i.Status.ACTIVE&&e.push(t),e},[]);e.list.splice(0,e.list.length),(t=e.list).push.apply(t,n),e.todoList.render(e.filter)}),document.getElementById("filters").addEventListener("change",function(t){var n=t.target,i=document.querySelector(".filter.selected");i&&i.classList.remove("selected"),n.parentElement.classList.add("selected"),"filter"===n.name&&(document.getElementById("filter-options").checked=!1,e.filter=n.value,e.todoList.render(e.filter))}),window.addEventListener("click",function(e){var t=e.target;"filter-options"!==t.id&&(document.getElementById("filter-options").checked=!1),"operations-control"!==t.id&&(document.getElementById("operations-control").checked=!1)})},e.prototype.configRoutes=function(){var e=this,t=document.getElementById("route-tasks"),n=document.getElementById("route-calendar"),i=document.getElementById("tasks"),r=document.getElementById("schedule");t.addEventListener("click",function(r){document.getElementsByClassName("current-sec")[0].classList.remove("current-sec"),i.classList.add("current-sec"),n.classList.remove("nav-active"),t.classList.add("nav-active"),e.todoList.render(),e.editor.el.classList.remove("show")}),n.addEventListener("click",function(i){document.getElementsByClassName("current-sec")[0].classList.remove("current-sec"),r.classList.add("current-sec"),t.classList.remove("nav-active"),n.classList.add("nav-active"),e.calendarTodoList.render(),e.editor.el.classList.remove("show")})},e}();window.addEventListener("load",function(){var e=new c;window.addEventListener("beforeunload",function(){localStorage.setItem("todolist",JSON.stringify(e.todoList.list))})})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(0),r=n(1),a=function(){function e(e){this.curTodoId="",this.list=e,this.el=document.getElementById("details"),this.editorClosed=new Event("editorClosed"),this.duedatePicker=new i.default(document.getElementById("due-date-picker")),this.alarmDatePicker=new i.default(document.getElementById("alarm-picker")),this.alarmTimePicker=new r.default(document.getElementById("time-picker")),this.handleClick=this.handleClick.bind(this),this.init()}return e.prototype.init=function(){var e=this;this.el.addEventListener("click",this.handleClick);var t=document.getElementById("edit-todo-title");t&&t.addEventListener("blur",function(n){var i=e.list.find(function(t){return t.id===e.curTodoId});i&&(i.title=t.value)});var n=document.getElementById("todo-details");n&&n.addEventListener("blur",function(t){var i=e.list.find(function(t){return t.id===e.curTodoId});i&&(i.detail=n.value)})},e.prototype.open=function(e){this.curTodoId=e;var t=this.list.find(function(t){return t.id===e});if(t){var n=this.el.querySelector("input[name=todo-title]");n&&(n.value=t.title);var i=this.el.querySelector("label[for=due-date-control]");if(t.dueDate){var r=new Date(t.dueDate.toString());i.innerText="Due on "+r.toDateString()}var a=this.el.querySelector("label[for=alarm-control]");if(t.reminderTime){var s=new Date(t.reminderTime.toString());a.innerHTML="<span>Remind me at "+s.toLocaleTimeString()+"</span><span>On "+s.toDateString()+"</span>"}var o=document.getElementById("todo-details");t.detail&&(o.value=t.detail)}this.el.classList.add("show")},e.prototype.close=function(){this.el.classList.remove("show"),this.el.dispatchEvent(this.editorClosed)},e.prototype.handleClick=function(e){for(var t=this,n=0,i=e.composedPath();n<i.length;n++){var r=i[n];if(r.classList&&r.classList.contains("close-editor")){this.close();break}if(r.classList&&r.classList.contains("due-date-save")){var a=this.el.querySelector("label[for=due-date-control]"),s=this.duedatePicker.selected,o=s.year,d=s.month,c=s.day,l=new Date(o,d-1,c);a.innerText="Due on "+l.toDateString(),(m=this.list.find(function(e){return e.id===t.curTodoId}))&&(m.dueDate=l);break}if(r.classList&&r.classList.contains("due-date-cancel")){var u=document.getElementById("due-date-control");u&&(u.checked=!1);break}if(r.classList&&r.classList.contains("reminder-save")){var h=this.el.querySelector("label[for=alarm-control]"),f=this.alarmDatePicker.selected;o=f.year,d=f.month,c=f.day;if(0===o)break;var m,p=parseInt(this.alarmTimePicker.hourPicker.value),v=parseInt(this.alarmTimePicker.minutePicker.value);l=new Date(o,d-1,c,p,v);h.innerHTML="<span>Remind me at "+l.toLocaleTimeString()+"</span> \n                <span>On "+l.toDateString()+"</span>",(m=this.list.find(function(e){return e.id===t.curTodoId}))&&(m.reminderTime=l);break}if(r.classList&&r.classList.contains("reminder-cancel")){var y=document.getElementById("alarm-control");y&&(y.checked=!1);break}}},e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(5),r=n(6),a=function(){function e(e,t,n,i){this.curTodoId="",this.swipedLeft=null,this.newTodo=null,this.list=e,this.editor=t,this.el=n,this.render=this.render.bind(this),i&&(this.newTodo=i),this.handleClick=this.handleClick.bind(this),this.handleChange=this.handleChange.bind(this),this.handleSwipeLeft=this.handleSwipeLeft.bind(this),this.handleNewTodo=this.handleNewTodo.bind(this),this.init()}return e.prototype.init=function(){var e=this;this.render(),this.el.addEventListener("click",this.handleClick),this.el.addEventListener("change",this.handleChange),r.listenToSwipe("left",this.el,this.handleSwipeLeft),this.editor.el.addEventListener("editorClosed",function(t){e.render()}),this.newTodo&&(this.newTodo.addEventListener("keypress",function(t){return"Enter"===t.key&&e.handleNewTodo()}),this.newTodo.nextElementSibling.addEventListener("click",this.handleNewTodo)),window.addEventListener("click",function(t){e.swipedLeft&&(e.swipedLeft.hidden=!0)})},e.prototype.render=function(e){var t,n=this;void 0===e&&(e="ALL"),this.checkDueDate();var a="ALL"===e?this.list:this.list.filter(function(t){return i.Status[t.status]===e});r.removeAllChildren(this.el),(t=this.el).append.apply(t,a.map(function(e){return n.createTodoItem(e)}))},e.prototype.createTodoItem=function(e){var t=document.createElement("li");t.classList.add("todo-item",e.status===i.Status.ACTIVE?"todo-active":"todo-completed"),e.pinned&&t.classList.add("pinned"),t.dataset.id=e.id;var n=document.createElement("input");n.type="checkbox",n.checked=e.status===i.Status.COMPLETED,n.classList.add("toggle-status");var r=document.createElement("div");r.classList.add("todo-info"),r.innerText=e.title;var a=document.createElement("div");a.classList.add("todo-actions"),a.hidden=!0;var s=document.createElement("button");s.classList.add("pin-button"),s.innerHTML='<i class="material-icons">vertical_align_top</i>';var o=document.createElement("button");o.classList.add("edit-button"),o.innerHTML='<i class="material-icons">edit</i>';var d=document.createElement("button");return d.classList.add("del-button"),d.innerHTML='<i class="material-icons">delete_forever</i>',a.append(s,o,d),t.append(n,r,a),t},e.prototype.handleClick=function(e){for(var t=function(e){var t;if(e.classList&&e.classList.contains("del-button")){var i=e.parentElement.parentElement;return n.list.splice(n.list.findIndex(function(e){return e.id===i.dataset.id}),1),i.remove(),"break"}if(e.classList&&e.classList.contains("edit-button")){var r=e.parentElement.parentElement;return n.curTodoId=r.dataset.id||"",n.editor.open(n.curTodoId),"break"}if(e.classList&&e.classList.contains("pin-button")){var a=e.parentElement.parentElement,s=n.list.splice(n.list.findIndex(function(e){return e.id===a.dataset.id}),1);s[0].pinned=!0,(t=n.list).unshift.apply(t,s);var o=document.getElementsByClassName("pinned");if(o.length){o[0].classList.remove("pinned");var d=n.list.find(function(e){return e.id===o[0].dataset.id});d&&(d.pinned=!1)}a.classList.add("pinned"),n.el.insertBefore(a,n.el.firstElementChild)}},n=this,i=0,r=e.composedPath();i<r.length;i++){if("break"===t(r[i]))break}},e.prototype.handleChange=function(e){var t=e.target.parentElement;if(t&&t.classList.contains("todo-item")){var n=this.list.find(function(e){return e.id===t.getAttribute("data-id")});n&&(n.status=n.status===i.Status.ACTIVE?i.Status.COMPLETED:i.Status.ACTIVE,t.classList.toggle("todo-completed"))}},e.prototype.handleSwipeLeft=function(e){for(var t=0,n=e.composedPath();t<n.length;t++){var i=n[t];if(i.classList&&i.classList.contains("todo-item")){this.swipedLeft&&(this.swipedLeft.hidden=!0),this.swipedLeft=i.getElementsByClassName("todo-actions")[0],this.swipedLeft.hidden=!1;break}}},e.prototype.handleNewTodo=function(){if(this.newTodo){var e=this.newTodo.value.trim();if(""===e)return;var t=new i.Todo(e);this.list.unshift(t),this.el.insertBefore(this.createTodoItem(t),this.el.firstElementChild),this.newTodo.value=""}},e.prototype.checkDueDate=function(){var e=new Date;this.list.forEach(function(t){if(t.dueDate){var n=new Date(t.dueDate.toString()),r=e.getFullYear()>=n.getFullYear()&&e.getMonth()>=n.getMonth()&&e.getDate()>n.getDate();t.status=r?i.Status.COMPLETED:t.status}})},e}();t.default=a},function(e,t,n){"use strict";var i;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.ACTIVE=0]="ACTIVE",e[e.COMPLETED=1]="COMPLETED"}(i||(i={})),t.Status=i;var r=function(){return function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=null),this.id=Date.now()+Math.random().toString(36).substring(2),this.pinned=!1,this.title=e,this.dueDate=t,this.reminderTime=n,this.detail="",this.status=i.ACTIVE}}();t.Todo=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeAllChildren=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},t.listenToSwipe=function(e,t,n){var i={x:0,y:0};t.addEventListener("touchstart",function(e){i.x=e.touches[0].clientX,i.y=e.touches[0].clientY}),t.addEventListener("touchend",function(t){var r=t.changedTouches[0].clientX-i.x,a=t.changedTouches[0].clientY-i.y;switch(e){case"left":r<0&&Math.abs(r)>30&&Math.abs(a)<20&&n(t)}})},t.delegate=function(e,t,n,i){e.addEventListener(n,function(e){for(var n=0,r=e.composedPath();n<r.length;n++)if(r[n]===t){i.call(t,e);break}})}},function(e,t,n){"use strict";var i,r=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var a=n(6),s=function(e){function t(t,n,i,r){var a=e.call(this,t,n,r)||this;return a.calendar=i,a.handleDayChange=a.handleDayChange.bind(a),a.calendar.el.addEventListener("click",a.handleDayChange),a.render(),a}return r(t,e),t.prototype.render=function(){var e,t=this;if(this.calendar){this.checkDueDate(),a.removeAllChildren(this.el);var n=this.list.filter(function(e){if(!e.dueDate)return!1;var n=new Date(e.dueDate.toString()),i=t.calendar.selected,r=i.year,a=i.month,s=i.day;return n.getFullYear()===r&&n.getMonth()+1===a&&n.getDate()===s});(e=this.el).append.apply(e,n.map(function(e){return t.createTodoItem(e)}))}},t.prototype.handleDayChange=function(e){var t=e.target;t&&t.classList.contains("this-month")&&this.render()},t}(n(4).default);t.default=s},function(e,t,n){"use strict";var i,r=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var a=n(6),s=function(e){function t(t,n,i,r){var a=e.call(this,t,n,i)||this;return a.searchEl=r,a.secEl=document.getElementsByClassName("search-sec")[0],a.titleEl=document.querySelector(".searching>span"),a.render=a.render.bind(a),a.searchEl.addEventListener("keyup",function(){a.secEl.style.order="-2",a.render()}),window.addEventListener("click",function(e){e.target!==a.secEl&&(a.secEl.style.order="0")}),a.render(),a}return r(t,e),t.prototype.render=function(){var e,t=this;if(this.searchEl){this.checkDueDate(),a.removeAllChildren(this.el);var n=this.searchEl.value;this.titleEl.innerText=n;var i=this.list.filter(function(e){return e.title.includes(n)});(e=this.el).append.apply(e,i.map(function(e){return t.createTodoItem(e)}))}},t}(n(4).default);t.default=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,